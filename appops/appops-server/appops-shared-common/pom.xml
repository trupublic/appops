<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.ainosoft</groupId>
		<artifactId>appops-server</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>appops-shared-common</artifactId>
	<name>appops-shared-common</name>
	<description> all server side common custom classes go here</description>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt</artifactId>
				<version>${gwtVersion}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.ainosoft</groupId>
			<artifactId>appops-infra-tsgenerator</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>


	<build>
		<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<compilerArgs>
						<compilerArg>-AxmlModuleNames=Dto,GwtBiOffice</compilerArg> <!-- no trailing gwt.xml / -->
						<compilerArg>-AmodulePath=org\\appops\\demo\\common</compilerArg> <!-- no trailing or beginning / -->
					</compilerArgs>
					<source>1.8</source>
					<target>1.8</target>
					<!-- Disable annotation processing till the module copy logic is sorted out. -->
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>

			<!-- maven.multiModuleProjectDirectory - value - C:\Users\debasish.padhy\git\G2\trunk\pyramidG2\pyramid.server\org.appops.demo.common -->

			<!-- maven-resources-plugin to copy generated gwt resources to webserver -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>..\..\appops-infra\appops-infra-web\WebContent\GwtCommon</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/${project.build.finalName}/GwtCommon</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Antrun plugin to run typescript generator.. Generated TypeScripts 
				for java classes in the specified folder -->
			<!-- <plugin> <artifactId>maven-antrun-plugin</artifactId> <version>1.8</version> 
				<executions> <execution> <id>ant-execute</id> <phase> test </phase> <configuration> 
				<target> <property name="runtime_classpath" refid="maven.runtime.classpath" 
				/> <exec executable="java" spawn="false"> <arg value="-classpath" /> <arg 
				value="${runtime_classpath}" /> <arg value="tsgen.TypeScriptGenerator" /> 
				<arg value="jsinterop.annotations.JsType" /> <arg value="pyramid.infra.core.annotations.Service" 
				/> folder path for placing typescript files - \ at the end is important <arg 
				value="..\pyramid.bioffice.webserver\WebContent\typings\" /> specify typescript 
				module name you want here <arg value="JsHost" /> </exec> </target> </configuration> 
				<goals> <goal>run</goal> </goals> </execution> </executions> </plugin> -->

			<!-- Mojo's Maven Plugin for GWT -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.8.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test</goal>
							<goal>generateAsync</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<runTarget>GwtBiOffice.html</runTarget>
					<modules>
						<module>org.appops.demo.common.GwtBiOffice</module>
					</modules>
					<copyWebapp>true</copyWebapp>
					<generateJsInteropExports>true</generateJsInteropExports>
					<draftCompile>true</draftCompile>
					<superDevMode>true</superDevMode> <!--  set to false to toggle gwt dev mode i.e for production deployment-->
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>